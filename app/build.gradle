apply plugin: 'com.android.application'

android {


    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "muchbeer.raum.roomrxjava"


        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    def lifecycle_version = "2.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Room components
    implementation "androidx.room:room-runtime:2.2.3"
    annotationProcessor "androidx.room:room-compiler:2.2.3"
    androidTestImplementation "androidx.room:room-testing:2.2.3"

    // RxJava2 Dependencies
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'androidx.room:room-rxjava2:2.2.3'

    //  implementation 'android.arch.persistence.room:rxjava2:1.1.1'
    // Testing support
    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    //     AndroidX libraries use this lightweight import for Lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation 'com.google.android.material:material:1.0.0'

    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

}
